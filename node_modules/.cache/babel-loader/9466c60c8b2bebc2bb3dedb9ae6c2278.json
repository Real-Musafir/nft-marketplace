{"ast":null,"code":"\"use strict\";\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\n\nfunction detectEthereumProvider() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$mustBeMetaMask = _ref.mustBeMetaMask,\n      mustBeMetaMask = _ref$mustBeMetaMask === void 0 ? false : _ref$mustBeMetaMask,\n      _ref$silent = _ref.silent,\n      silent = _ref$silent === void 0 ? false : _ref$silent,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 3000 : _ref$timeout;\n\n  _validateInputs();\n\n  var handled = false;\n  return new Promise(function (resolve) {\n    if (window.ethereum) {\n      handleEthereum();\n    } else {\n      window.addEventListener('ethereum#initialized', handleEthereum, {\n        once: true\n      });\n      setTimeout(function () {\n        handleEthereum();\n      }, timeout);\n    }\n\n    function handleEthereum() {\n      if (handled) {\n        return;\n      }\n\n      handled = true;\n      window.removeEventListener('ethereum#initialized', handleEthereum);\n      var _window = window,\n          ethereum = _window.ethereum;\n\n      if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n        resolve(ethereum);\n      } else {\n        var message = mustBeMetaMask && ethereum ? 'Non-MetaMask window.ethereum detected.' : 'Unable to detect window.ethereum.';\n        !silent && console.error('@metamask/detect-provider:', message);\n        resolve(null);\n      }\n    }\n  });\n\n  function _validateInputs() {\n    if (typeof mustBeMetaMask !== 'boolean') {\n      throw new Error(\"@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.\");\n    }\n\n    if (typeof silent !== 'boolean') {\n      throw new Error(\"@metamask/detect-provider: Expected option 'silent' to be a boolean.\");\n    }\n\n    if (typeof timeout !== 'number') {\n      throw new Error(\"@metamask/detect-provider: Expected option 'timeout' to be a number.\");\n    }\n  }\n}\n\nmodule.exports = detectEthereumProvider;","map":null,"metadata":{},"sourceType":"script"}